--[[    create by baihan 2020.02.25 
    宝石的管理类 
--]]
local GemManager = Class("GemManager", UnityObjectClass)
local Gem = require("Items.Gem")

-- 图片资源
GemManager.m_scrObjData = {}
-- gem容器
GemManager.m_lsGems = {}
-- gem的预制体
GemManager.m_objGemTemp = nil


local m_eGemType = {
    [1] = "Green",
    [2] = "Blue",
    [3] = "Yellow",
    [4] = "Red",
    [5] = "Purple",
    [6] = "Diamond",
}

local m_tbRate = {
    ["Green"] = 0.35,
    ["Blue"] = 0.7,
    ["Yellow"] = 0.8,
    ["Red"] = 0.9,
    ["Purple"] = 1,
}

local m_tbTexIndex = {
    ["Green"] = 0,
    ["Blue"] = 1,
    ["Yellow"] = 2,
    ["Red"] = 3,
    ["Purple"] = 4,
    ["Diamond"] = 5
}

local m_strTexPath = ScriptablePath .. "scrObjGemTextures"
local m_strGemPath = PrefabPath .. "Gem"

function GemManager:Init()
    self.m_scrObjData = Uload(m_strTexPath)
    self.m_objGemTemp = Uload(m_strGemPath)
end

-- 通过随机概率生成宝石
function GemManager:CreateGem(tbGemPositionData)
    for k,v in pairs(tbGemPositionData) do
        -- Create rate
        local iGemTexIndex = nil
        local strGemTex = nil
        local gemRate = math.random(1, 10) * 0.1

        for i, v in ipairs(m_eGemType) do
            if m_tbRate[v] >= gemRate then
                iGemTexIndex = m_tbTexIndex[v]
                strGemTex = v
                break
            end
        end
        local texGem = self.m_scrObjData.lsDatas[iGemTexIndex].value;

        local v3Position = v;
        -- Create gem
        local objNewGem = Uinstantiate(self.m_objGemTemp, v3Position, UQuaternion.identity, self.m_transform)
        local scrGem = Gem.New(objNewGem, texGem, #self.m_lsGems + 1, strGemTex)

        table.insert(self.m_lsGems, scrGem)
    end

    -- self:TestMove()
end

function GemManager:TestMove()
    local targetPosition = self.m_transform:Find("TestPosition").position
    self.m_lsGems[1]:MoveToTargetPosition(targetPosition)
end

return GemManager